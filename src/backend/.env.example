# vxMailAgent Backend Example Environment Variables
# Copy to `.env` and fill in with real secrets for local/dev/prod use.

# === Google OAuth2 ===
# Provider (Gmail) OAuth client — used for linking Gmail accounts and refreshing tokens
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret
GOOGLE_REDIRECT_URI=http://localhost:3001/api/accounts/oauth/google/callback # Must match Google Cloud Console exactly (backend callback)

# Login (OIDC) OAuth client — used ONLY for app login sessions. Keep this separate from provider client above.
# Redirect URI must match your BACKEND login callback endpoint (/api/auth/google/callback)
GOOGLE_LOGIN_CLIENT_ID=your-google-login-oauth-client-id
GOOGLE_LOGIN_CLIENT_SECRET=your-google-login-oauth-client-secret
GOOGLE_LOGIN_REDIRECT_URI=http://localhost:3001/api/auth/google/callback

# === Outlook OAuth2 ===
OUTLOOK_CLIENT_ID=your-outlook-oauth-client-id
OUTLOOK_CLIENT_SECRET=your-outlook-oauth-client-secret
OUTLOOK_REDIRECT_URI=http://localhost:3001/api/accounts/oauth/outlook/callback # Must match Azure Portal exactly (backend callback)

# === Application Secrets ===
VX_MAILAGENT_KEY=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef # 64 hex chars (for encrypted storage)

# === Auth / Sessions (JWT) ===
# Used for both login session token and OAuth state signing. Change in production.
JWT_SECRET=dev-insecure-jwt
# Default 24h (in seconds)
JWT_EXPIRES_IN_SEC=86400

# === Optional ===
PORT=3001 # Backend server port
HOST=127.0.0.1
# Path to persistent data directory (accounts, agents, etc.). Must be absolute or relative to backend execution path. If unset, defaults to ../data
VX_MAILAGENT_DATA_DIR=./data
CORS_ORIGIN=http://localhost:3000 # Frontend origin for CORS (use * only for local/dev if necessary)

# === Logging ===
# NODE_ENV controls prod vs dev logging format; LOG_LEVEL controls verbosity
LOG_LEVEL=debug

# === Diagnostics / Tracing ===
# Persist traces to disk (true/false). If false, spans/traces are not stored.
TRACE_PERSIST=true
# Include redacted request/response payloads in spans (true/false)
TRACE_VERBOSE=false
# Maximum payload size per request/response (bytes)
TRACE_MAX_PAYLOAD=32768
# Maximum number of spans per trace to prevent unbounded growth
TRACE_MAX_SPANS=1000
# Comma-separated case-insensitive field names to redact from payloads
TRACE_REDACT_FIELDS=authorization,api_key,access_token,refresh_token,set-cookie,cookie
# Retention settings: TTL in days (older traces pruned). Per-user caps are enforced by USER_MAX_LOGS_PER_TYPE.
TRACE_TTL_DAYS=7

# === Provider Events (audit) Retention ===
# Retention TTL in days (per-user caps enforced by USER_MAX_LOGS_PER_TYPE)
PROVIDER_TTL_DAYS=7

# === Orchestration & Fetcher Logs Retention ===
ORCHESTRATION_TTL_DAYS=7
FETCHER_TTL_DAYS=7

# === Multi-user Isolation & Limits ===
# Registry cache for logged-in users
USER_REGISTRY_TTL_MINUTES=60
USER_REGISTRY_MAX_ENTRIES=1000
# User resource limits
USER_MAX_FILE_SIZE_MB=50
USER_MAX_CONVERSATIONS=10000
USER_MAX_LOGS_PER_TYPE=10000

# === Fetcher Manager (process cache) ===
# Controls fetcher lifecycle and bootstrap behavior
FETCHER_MANAGER_TTL_MINUTES=60
FETCHER_MANAGER_MAX_FETCHERS=100
FETCHER_BOOTSTRAP_CONCURRENCY=10

# === Request/Execution Timeouts (ms) ===
# Keep conservative to avoid hangs
OPENAI_REQUEST_TIMEOUT_MS=30000
GRAPH_REQUEST_TIMEOUT_MS=15000
PROVIDER_REQUEST_TIMEOUT_MS=30000
CONVERSATION_STEP_TIMEOUT_MS=45000
TOOL_EXEC_TIMEOUT_MS=30000

# Note: OpenAI API keys are managed per user in app Settings. There is no global OPENAI_API_KEY env var in production use.
